services:
  backend1:
    build: ./backend
    container_name: backend1
    ports:
      - "5001:5000"
    networks:
      - monitoring

  backend2:
    build: ./backend
    container_name: backend2
    ports:
      - "5002:5000"
    networks:
      - monitoring

  backend3:
    build: ./backend
    container_name: backend3
    ports:
      - "5003:5000"
    networks:
      - monitoring

  load-balancer:
    build: ./load-balancer
    container_name: load-balancer
    ports:
      - "5000:5000"
    depends_on:
      - backend1
      - backend2
      - backend3
      - prometheus
      - node_exporter
      - cadvisor
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
      - influxdb
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_SECURITY_ALLOW_ANONYMOUS_ACCESS: "true"  # Enable anonymous access
    networks:
      - monitoring
    restart: always

  node_exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    networks:
      - monitoring

  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./load_tests/:/mnt/locust
    command: -f /mnt/locust/load_tests.py
    networks:
      - monitoring

  locust-metrics-exporter:
    image: containersol/locust_exporter
    ports:
      - "9646:9646"
    environment:
      - LOCUST_EXPORTER_URI=http://locust:8089
    depends_on:
      - locust
    networks:
      - monitoring

  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    ports:
      - "8086:8086"  # InfluxDB query and write endpoint
    environment:
      INFLUXDB_DB: prometheus
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: password
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring
    restart: always

networks:
  monitoring:
    driver: bridge

volumes:
  influxdb_data:
    driver: local